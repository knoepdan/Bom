@using Bom.Web.Identity.Mvc;
@{
    var layoutData = this.ViewData.LayoutData();
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Bom</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    @{

        //
        Bom.Utils.Dev.Todo("separate css file");
    }
    <link rel="stylesheet" href="~/css/bundle.css" />

    @await Html.PartialAsync("~/Identity/Views/Shared/CssView.cshtml")

</head>
<body>
    <div class="cont">
        <header class="topBar">
            <span class="title">BomXX</span>

        </header>

        <div class="mainContent">
            <div>
                @{
                    var tempDataRegistry = new TempDataHelper(TempData);
                    var messages = tempDataRegistry.GetMessages();
                    if (messages.Count > 0)
                    {
                        <div class="centerBox messageArea">
                            @foreach (var msg in messages)
                            {
                                var className = "";
                                switch (msg.Type)
                                {
                                    case UserMessage.MessageType.Info:
                                        className = "infoMsg";
                                        break;
                                    case UserMessage.MessageType.Error:
                                        className = "errorMsg";
                                        break;
                                    default: break;
                                }
                                <div class="@className">@msg.Message</div>
                            }
                        </div>
                    }
                }
            </div>

            @RenderBody()






            @if (this.User != null && this.User.Identities != null)
            {
                <div>
                    @foreach (var id in this.User.Identities)
                    {
                        <div>
                            @id.Name   (@id.IsAuthenticated)  ###
                            <ul>
                                @foreach (var claim in id.Claims)
                                {
                                    <li>@claim.Type   @claim.Value</li>

                                }
                            </ul>
                        </div>
                    }
                </div>
            }








        </div>

            <footer class="footer">
                <a href="#">Info</a>

                <a href="#">Datenrichtlinie</a>
                <a href="#">Nutzungsbedingungen</a>
                <a href="#">Cookies </a>

                <span>

                    @if (layoutData.AvailableLanguageCodes.Count > 1)
                    {
                                    var request = this.ViewContext.HttpContext.Request;
                        <span>
                            @foreach (var langCode in layoutData.AvailableLanguageCodes)
                            {
                                        var currentLang = layoutData.GetCurrentLangCode();
                                        var langName = layoutData.HtmlService.LocalizeHtml("Common.LangUntranslated." + langCode, langCode); // should not be translated (depends on localization store)
                                        if (currentLang == langCode)
                                        {
                                    // no ling
                                    <b>@langName</b>
                                        }
                                        else
                                        {
                                            var path = request.Path.Value!; // "/de/Home/Index" or  in case of Home: "/Home/Index" or "/"
                                            var basePath = request.PathBase; // /BomApi

                                            string url = $"{basePath}/{Html.UrlEncoder.Encode(langCode)}/account"; // default -> only when no controller or action
                                            if (!string.IsNullOrEmpty(path) && path != "/")
                                            {
                                                string newPath = $"{Html.UrlEncoder.Encode(langCode)}/{path.TrimStart('/')}";
                                                if (request.RouteValues.ContainsKey(Bom.Web.Common.Const.RouteArgumentNames.Lang))
                                                {
                                                    var parts = path.Split('/', StringSplitOptions.RemoveEmptyEntries);
                                                    parts[0] = Html.UrlEncoder.Encode(langCode);
                                                    newPath = $"/{string.Join('/', parts)}";
                                                }
                                                url = $"{basePath}/{newPath.TrimStart('/')}";
                                            }

                                            // add query string
                                            if (!string.IsNullOrEmpty(request.QueryString.Value))
                                            {
                                                url = url + "?" + request.QueryString.Value.TrimStart('?');
                                            }

                                    <a href="@url">@langName</a>
                                        }
                                    }
                        </span>
                    }
                </span>
            </footer>
        </div>
</body>
</html>
