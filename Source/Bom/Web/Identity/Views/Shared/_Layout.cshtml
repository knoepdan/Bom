@using Bom.Web.Common.Mvc;
@{
    var layoutData = this.ViewData.LayoutData();
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Bom</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>

    <header>
        <h2>Layout-Page</h2>

        @if (layoutData.AvailableLanguageCodes.Count > 1)
        {
            var request = this.ViewContext.HttpContext.Request;
            <span style="float:left">
                @foreach (var langCode in layoutData.AvailableLanguageCodes)
                {
                    var currentLang = layoutData.GetCurrentLangCode();
                    var langName = layoutData.HtmlService.LocalizeHtml("Common.LangUntranslated." + langCode, langCode); // should not be translated (depends on localization store)
                    if (currentLang == langCode)
                    {
                        // no ling
                        <b>@langName</b>
                    }
                    else
                    {
                        var path = request.Path.Value!; // "/de/Home/Index" or  in case of Home: "/Home/Index" or "/"
                        var basePath = request.PathBase; // /BomApi

                        string url = $"{basePath}/{Html.UrlEncoder.Encode(langCode)}/home"; // default -> only when no controller or action
                        if (!string.IsNullOrEmpty(path) && path != "/")
                        {
                            string newPath = $"{Html.UrlEncoder.Encode(langCode)}/{path.TrimStart('/')}";
                            if (request.RouteValues.ContainsKey(Bom.Web.Common.Const.RouteArgumentNames.Lang))
                            {
                                var parts = path.Split('/', StringSplitOptions.RemoveEmptyEntries);
                                parts[0] = Html.UrlEncoder.Encode(langCode);
                                newPath = $"/{string.Join('/', parts)}";
                            }
                            url = $"{basePath}/{newPath.TrimStart('/')}";
                        }

                        // add query string
                        if (!string.IsNullOrEmpty(request.QueryString.Value))
                        {
                            url = url + "?" + request.QueryString.Value.TrimStart('?');
                        }

                        <a href="@url">@langName</a>
                    }
                }
            </span>
        }
    </header>
    <div>


        <div>
            @{
                var tempDataRegistry = new TempDataHelper(TempData);
                var messages = tempDataRegistry.GetMessages();
                if (messages.Any())
                {
                    <div id="messages" class="message-area">
                        @foreach (var message in messages)
                        {
                            <div>@message</div>
                        }
                    </div>
                }
            }

        </div>


        @RenderBody()
    </div>

</body>

</html>
